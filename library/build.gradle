apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion

        resValue "string", "app_downloadUrl", "${app_downloadUrl}"
        resValue "string", "feed_email", "${feed_email}"
        resValue "string", "mapapikey", "${mapapikey}"
        resValue "string", "app_name", "${appName}"
        resValue "string", "versionWeb", "${versionWeb}"
        resValue "string", "isDebug", "${false}"
        resValue "string", "facebook_app_id", "${facebook_app_id}"
        resValue "string", "fb_login_protocol_scheme", "${fb_login_protocol_scheme}"
        resValue "string", "firebase_default_notification_channel_id", "${firebase_default_notification_channel_id}"
        resValue "string", "twitter_consumer_key", "${twitter_consumer_key}"
        resValue "string", "twitter_consumer_secret", "${twitter_consumer_secret}"
        resValue "string", "google_web_client_id", "${google_web_client_id}"
        resValue "string", "base_url_password", "${base_url_password}"
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
        }
    }

    repositories {
        flatDir {
            dirs 'libs' //this way we can find the .aar file in libs folder
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res'
            ]
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

greendao {
    //数据库的schema版本，也可以理解为数据库版本号
    schemaVersion 1
    //设置DaoMaster、DaoSession、Dao包名，也就是要放置这些类的包的全路径。
    daoPackage 'com.base.dao'
    //设置DaoMaster、DaoSession、Dao目录
    targetGenDir 'src/main/java'
}


dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxjava_adpater"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["greenDao"]
    api rootProject.ext.dependencies["fastjson"]
    api(rootProject.ext.dependencies["glide"]){
        exclude group: "com.android.support"
    }
    api rootProject.ext.dependencies["kotlin"]
    api rootProject.ext.dependencies["firebase-core"]
    api rootProject.ext.dependencies["design"]
    api rootProject.ext.dependencies["constraint-layout"]
    api rootProject.ext.dependencies["twitterAuth"]
    api rootProject.ext.dependencies["googleAuth"]
    //facebook
    api(rootProject.ext.dependencies["facebook-ays"])
            {
                exclude group: 'com.android.support', module: 'support-v4'
                exclude group: 'com.android.support', module: 'appcompat-v7'
                exclude group: 'com.android.support', module: 'customtabs'
                exclude group: 'com.android.support', module: 'support-annotations'
                exclude group: 'com.android.support', module: 'support-core-utils'
            }

    /*leak 内存泄露检查*/
    debugApi rootProject.ext.dependencies["debugleakcanary"]
    releaseApi rootProject.ext.dependencies["releaseleakcanary"]
}
