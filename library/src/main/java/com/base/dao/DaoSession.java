package com.base.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.base.share_data.share_msg.ShareData;
import com.base.library.retrofit_rx.http.cookie.CookieResulte;
import com.base.library.retrofit_rx.downlaod.DownInfo;

import com.base.dao.ShareDataDao;
import com.base.dao.CookieResulteDao;
import com.base.dao.DownInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig shareDataDaoConfig;
    private final DaoConfig cookieResulteDaoConfig;
    private final DaoConfig downInfoDaoConfig;

    private final ShareDataDao shareDataDao;
    private final CookieResulteDao cookieResulteDao;
    private final DownInfoDao downInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        shareDataDaoConfig = daoConfigMap.get(ShareDataDao.class).clone();
        shareDataDaoConfig.initIdentityScope(type);

        cookieResulteDaoConfig = daoConfigMap.get(CookieResulteDao.class).clone();
        cookieResulteDaoConfig.initIdentityScope(type);

        downInfoDaoConfig = daoConfigMap.get(DownInfoDao.class).clone();
        downInfoDaoConfig.initIdentityScope(type);

        shareDataDao = new ShareDataDao(shareDataDaoConfig, this);
        cookieResulteDao = new CookieResulteDao(cookieResulteDaoConfig, this);
        downInfoDao = new DownInfoDao(downInfoDaoConfig, this);

        registerDao(ShareData.class, shareDataDao);
        registerDao(CookieResulte.class, cookieResulteDao);
        registerDao(DownInfo.class, downInfoDao);
    }
    
    public void clear() {
        shareDataDaoConfig.clearIdentityScope();
        cookieResulteDaoConfig.clearIdentityScope();
        downInfoDaoConfig.clearIdentityScope();
    }

    public ShareDataDao getShareDataDao() {
        return shareDataDao;
    }

    public CookieResulteDao getCookieResulteDao() {
        return cookieResulteDao;
    }

    public DownInfoDao getDownInfoDao() {
        return downInfoDao;
    }

}
